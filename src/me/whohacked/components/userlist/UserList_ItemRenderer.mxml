<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				creationComplete="creationCompleteHandler(event)"
				addedToStage="addedToStageHandler(event)"
				removedFromStage="removedFromStageHandler(event)"
				height="30" width="100%" remove="removeHandler(event)"
				fontSize="18" fontWeight="bold">
	
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import me.whohacked.app.AppWideDebug_Singleton;
			import me.whohacked.app.AppWideEventDispatcher_Singleton;
			import me.whohacked.app.AppWide_Singleton;
			import me.whohacked.app.IconManager_Singleton;
			import me.whohacked.events.CustomEvent;
			
			
			
			private function creationCompleteHandler(event:FlexEvent):void
			{
				debugMsg('creationCompleteHandler->  ');
			}
			
			
			private function addedToStageHandler(event:Event):void
			{
				debugMsg('addedToStageHandler->  ');
				AppWideEventDispatcher_Singleton.getInstance().addEventListener("mediaSOClient_userVideoOn",userVideoOn);
				AppWideEventDispatcher_Singleton.getInstance().addEventListener("mediaSOClient_userVideoOff",userVideoOff);
				AppWideEventDispatcher_Singleton.getInstance().addEventListener("mediaSOClient_userAudioOn",userAudioOn);
				AppWideEventDispatcher_Singleton.getInstance().addEventListener("mediaSOClient_userAudioOff",userAudioOff);
				AppWideEventDispatcher_Singleton.getInstance().addEventListener("onUserListLoaded",onUserListLoaded);
			}
			
			private function removedFromStageHandler(event:Event):void
			{
				debugMsg('removedFromStageHandler->  ');
				AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userVideoOn",userVideoOn);
				AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userVideoOff",userVideoOff);
				AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userAudioOn",userAudioOn);
				AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userAudioOff",userAudioOff);
				AppWideEventDispatcher_Singleton.getInstance().removeEventListener("onUserListLoaded",onUserListLoaded);
			}
			
			
			private function onUserListLoaded(event:Event):void
			{
				debugMsg('onUserListLoaded->  ');
				if (data)
				{
					videoOnOff_Img.visible = data.isUsersVideoOn;
					audioOnOff_Img.visible = data.isUsersAudioOn;
				} else {
					AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userVideoOn",userVideoOn);
					AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userVideoOff",userVideoOff);
					AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userAudioOn",userAudioOn);
					AppWideEventDispatcher_Singleton.getInstance().removeEventListener("mediaSOClient_userAudioOff",userAudioOff);
					AppWideEventDispatcher_Singleton.getInstance().removeEventListener("onUserListLoaded",onUserListLoaded);
				}
				invalidateDisplayList();
				event = null;
			}
			
			
			private function userVideoOn(event:CustomEvent):void
			{
				userMediaOnOff(event.eventObj.userID,"video",true);
				event = null;
			}
			
			
			private function userVideoOff(event:CustomEvent):void
			{
				userMediaOnOff(event.eventObj.userID,"video",false);
				event = null;
			}
			
			
			private function userAudioOn(event:CustomEvent):void
			{
				userMediaOnOff(event.eventObj.userID,"audio",true);
				event = null;
			}
			
			
			private function userAudioOff(event:CustomEvent):void
			{
				userMediaOnOff(event.eventObj.userID,"audio",false);
				event = null;
			}
			
			
			public function userMediaOnOff(userID:Number,media:String,onOff:Boolean):void
			{
				if (data != null && (data.userID == userID))
				{
					switch(media)
					{
						case "video":
						{
							data.isUsersVideoOn = onOff;
							videoOnOff_Img.visible = onOff;
							break;
						}
							
						case "audio":
						{
							data.isUsersAudioOn = onOff;
							audioOnOff_Img.visible = onOff;
							break;
						}
					}
				}
			}
			
			
			private function removeHandler(event:FlexEvent):void
			{
				debugMsg('removeHandler->  ');
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			private function debugMsg(str:String):void
			{
				AppWideDebug_Singleton.getInstance().newDebugMessage(this.className,str);
			}
			
			
			
			
		]]>
	</fx:Script>
	
	
	<s:HGroup width="100%" height="100%" gap="0" verticalAlign="middle">
		
		
		<s:BitmapImage id="userIcon_Img"
					   source="{IconManager_Singleton.getInstance().getIcon('userlist_member')}"
					   width="20" height="20"/>
		
		<s:Label id="userName_L" width="100%" height="100%" maxDisplayedLines="1"
				 fontSize="16" color="#000000" text="{data.userName}" verticalAlign="middle"/>
		
		
		<s:VGroup height="100%" paddingRight="0"
				  width="20" gap="0"
				  verticalAlign="middle"
				  horizontalAlign="center">
			
			<s:BitmapImage id="videoOnOff_Img"
						   visible="false"
						   source="{IconManager_Singleton.getInstance().getIcon('cam')}"
						   width="12" height="12"/>
			
			<s:BitmapImage id="audioOnOff_Img"
						   visible="false"
						   source="{IconManager_Singleton.getInstance().getIcon('audio')}"
						   width="12" height="12"/>
			
		</s:VGroup>
		
		
	</s:HGroup>
	
	
	
	
	
	
	
	
	
	
	
	
	
</s:ItemRenderer>